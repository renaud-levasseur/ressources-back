import { Request, Response } from 'express';
import Exploitation from '../models/exploitation.model';

// Create
export const createExploitation = async (req: Request, res: Response) => {
    try {
        const newExploitation = await Exploitation.create(req.body);
        res.status(201).json({message: 'Exploitation ajoutée avec succès !', data: newExploitation});
    } catch (error) {
        res.status(400).json({error: 'La création de l\'exploitation a échoué.'});
    }
};

// GetAll
export const getExploitations = async (req: Request, res: Response) => {
    try {
        const exploitations = await Exploitation.findAll();
        res.json(exploitations);
    } catch (error) {
        res.status(500).json({error: 'Une erreur est survenue lors de la récupération des exploitations.'});
    }
};

// GetExploitationsByRessourceId
export const GetExploitationsByRessourceId = async (req: Request, res: Response) => {
    const id = parseInt(req.params.id);
    try {
        const exploitations = await Exploitation.findAll({where : {ressourceId : id}});
        res.json(exploitations);
    } catch (error) {
        res.status(500).json({error: 'Une erreur est survenue lors de la récupération des exploitations de la ressource fournie.'});
    }
};

// GetExploitationsByUserId
export const GetExploitationsByUserId = async (req: Request, res: Response) => {
    const id = parseInt(req.params.id);
    try {
        const exploitations = await Exploitation.findAll({where : {userId : id}});
        res.json(exploitations);
    } catch (error) {
        res.status(500).json({error: 'Une erreur est survenue lors de la récupération des exploitations de l\'utilisateur fourni.'});
    }
};

// GetOneById
export const getExploitationById = async (req: Request, res: Response) => {
    const id = parseInt(req.params.id);
    const exploitation = await Exploitation.findByPk(id);
    
    if (!exploitation) {
        res.status(404).json({error: 'Exploitation introuvable.'});
    } else {
        res.json(exploitation);
    }
};

// Delete
export const deleteExploitation = async (req: Request, res: Response) => {
    const id = parseInt(req.params.id);
    const exploitation = await Exploitation.findByPk(id);

    if (!exploitation) {
        res.status(404).json({message: 'Exploitation introuvable.'});
        return;
    }

    try {
        await exploitation.destroy();
        res.status(200).json({message: 'Exploitation supprimée avec succès.'});
    } catch (error) {
        console.error(error);
        res.status(500).json({message: 'Une erreur est survenue lors de la suppression de cette exploitation.'});
    }
};
